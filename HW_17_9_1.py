while True: #просим ввести последовательность чисел и проверяем корректность вводимых данных
    try:
        array = list(map(int, input("Введите последовательность числел через пробел: ").split()))
        # в задании нигде не говорилось, что нужно убрать повторы, так что set() не использовала
        break
    except ValueError as e:
        print('Пожалуйста, не используйте знаки препинания. Все числа должны быть разделены через один пробел')

while True: #просим ввести число, проверяем корректность вводимых данных
    try:
        value = int(input("Введите число для сравнения с числами последовательности: "))
        break
    except ValueError as e:
        print('Введите число без пробелов, букв и проч.')
array.append(value) # добавляем число в последовательность,
# двоичный поиск выдаст индекс числа, если оно есть в последовательности, иначе вернёт None. Итого надо добавить число
# так мы сможем сравнить введённое число с другими в последовательности без проблем и вывести индекс меньшего и большего/равного

array = sorted(array) # сортируем последовательность через функцию sorted()
print(array) # выводим результат для наглядности

mid = len(array) // 2 # реализуем двоичный поиск индекса элемента, который ввели с клавиатуры
low = 0
high = len(array) - 1

while array[mid] != value and low <= high:
    if value > array[mid]:
        low = mid + 1
    else:
        high = mid - 1
    mid = (low + high) // 2

if mid == 0: # если введённое нами в последовательность число имеет индекс ноль, то
    print('Число, которое вы ввели, меньше любого числа в искомой последовательности.')
else:
    print("Индекс числа искомой последовательности, которое меньше введённого и стоит перед ним: ", mid - 1)
    # получается, если вычесть 1 из индекса нашего элемента, то получим индекс числа, которое стоит перед ним
    print("Индекс числа искомой последовательности, которое больше или равно введённому: ", mid)
    # а индекс самого этого числа, добавленного в последовательность в 15-й строчке,
    # соответствует числу искомой последовательности , большему или равному тому, которое ввели с клавиатуры